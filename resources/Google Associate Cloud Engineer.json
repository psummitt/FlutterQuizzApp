[
    {
        "title": "You want to ensure the boot disk of a preemptible instance is persisted for re-use. How should you provision the gcloud compute instance to ensure your requirement is met.",
        "imagePath": "",
        "optionType": "singleChoice",
        "notes": "some notes on this question",
        "supportiveInfo": "Use --no-boot-disk-auto-delete to disable automatic deletion of boot disks when the instances are deleted. --boot-disk-auto-delete flag is enabled by default. It enables automatic deletion of boot disks when the instances are deleted. In order to prevent automatic deletion, we have to specify --no-boot-disk-auto-delete flag.",
        "options": [
            {
                "title": "gcloud compute instances create [INSTANCE_NAME] --preemptible. The flag --boot-disk-auto-delete is disabled by default",
                "correct": false
            },
            {
                "title": "gcloud compute instances create [INSTANCE_NAME] --no-auto-delete",
                "correct": false
            },
            {
                "title": "gcloud compute instances create [INSTANCE_NAME] -preemptible --no-boot-disk-auto-delete",
                "correct": true
            },
            {
                "title": "gcloud compute instances create [INSTANCE_NAME] --preemptible --boot-disk-auto-delete=no",
                "correct": false
            }
        ]
    },
    {
        "title": "You can SSH into an instance from another instance in the same VPC by its internal IP address, but not its external IP address.  What is one possible reason why this is so?",
        "imagePath": "",
        "optionType": "singleChoice",
        "notes": "some notes on this question",
        "supportiveInfo": "firewall rules need to be enabled for within the network and external network to be allowed to ssh into the instances.",
        "options": [
            {
                "title": "The receiving instance has an ephemeral address instead of a reserved address.",
                "correct": false
            },
            {
                "title": "The external IP address is disabled",
                "correct": false
            },
            {
                "title": "The outgoing instance does not have correct permission granted to its service account.",
                "correct": false
            },
            {
                "title": "The firewall rule to allow SSH is restricted to the internal VPC.",
                "correct": true
            }
        ]
    },
    {
        "title": "You set up an application to be deployed in a Kubernetes Cluster with GKE. Your app uses various Cloud services, including Cloud Spanner and Cloud Pub/Sub, and you are requested to find an optimized way to run the system.  What is the best way to securely authorize all operations?",
        "imagePath": "",
        "optionType": "singleChoice",
        "notes": "some notes on this question",
        "supportiveInfo": "The best method is always through the use of Service Accounts. You can configure the Service Account to be associated each time a VM is created, but the privileges to be assigned can be different among the various applications in the various pods that may share the same VM.",
        "options": [
            {
                "title": "Write the credentials in the source repository or inside the container image",
                "correct": false
            },
            {
                "title": "Create a service account and use the corresponding key with a K8s secret",
                "correct": true
            },
            {
                "title": "Write the login credentials of a user enabled to those Services in the Deployment manifest file in YAML format",
                "correct": false
            },
            {
                "title": "Associate a specific service account with the configuration of the specific node pool (NodeConfig)",
                "correct": false
            }
        ]
    },
    {
        "title": "Your Company is planning to migrate all Java web applications to Google App Engine. However, you still want to continue using your on-premise database. How can you set up the app engine to communicate with your on-premise database while minimizing effort?",
        "imagePath": "",
        "optionType": "singleChoice",
        "notes": "some notes on this question",
        "supportiveInfo": "You need Cloud VPN to connect VPC to an on-premise network. Unlike App Engine Standard which is serverless, App Engine Flex instances are already within the VPC, so they can use Cloud VPN to connect to the on-premise network.",
        "options": [
            {
                "title": "Setup the application using App Engine Flexible environment with Cloud Router to connect to an on-premise database.",
                "correct": false
            },
            {
                "title": "Setup the application using App Engine Flexible environment with Cloud VPN to connect to an on-premise database.",
                "correct": true
            },
            {
                "title": "Setup the application using App Engine Standard environment with Cloud Router to connect to an on-premise database.",
                "correct": false
            },
            {
                "title": "Setup the application using App Engine Standard environment with Cloud VPN to connect to an on-premise database.",
                "correct": false
            }
        ]
    },
    {
        "title": "Your compliance team requested all audit logs are stored for 10 years and to allow access for external auditors to view. You want to follow Google recommended practices. What should you do? (Choose two)",
        "imagePath": "",
        "optionType": "multiChoice",
        "notes": "some notes on this question",
        "supportiveInfo": "In Google Cloud Storage, you can generate a signed URL to provide limited permission and time to make a request. Anyone who possesses it can use the signed URL to perform specified actions, such as reading an object, within a specified period of time. In our scenario, we do not need to create accounts for our auditors to provide access to logs in Cloud Storage. Instead, we can generate them signed URLs which are timebound and lets them access/download log files",
        "options": [
            {
                "title": "Create an account for the auditors to have view access to Stackdriver Logging",
                "correct": false
            },
            {
                "title": "Export audit logs to Splunk via Pub/Sub export sink",
                "correct": false
            },
            {
                "title": "Export audit logs to Cloud Storage via an export sink",
                "correct": true
            },
            {
                "title": "Generate a signed URL to the Stackdriver export destination for auditors to access.",
                "correct": true
            }
        ]
    },
    {
        "title": "Your company is migrating an application from its on-premises data centre to Google Cloud. One of the applications uses a custom Linux distribution that is not available on Google Cloud. Your solution architect has suggested using VMWare tools to exporting the image and store it in a Cloud Storage bucket. The VM Image is a single compressed 64 GB tar file. You started copying this file using gsutil over a dedicated 1Gbps network, but the transfer is taking a very long time to complete. Your solution architect has suggested using all of the 1Gbps Network to transfer the file quickly. What should you do?",
        "imagePath": "",
        "optionType": "singleChoice",
        "notes": "some notes on this question",
        "supportiveInfo": "With cloud storage, Object composition can be used for uploading an object in parallel: you can divide your data into multiple chunks, upload each chunk to a distinct object in parallel, compose your final object, and delete any temporary source objects. This option helps maximize your bandwidth usage and ensures the file is uploaded as fast as possible.",
        "options": [
            {
                "title": "Increase the transfer speed by decreacing the TCP window size.",
                "correct": false
            },
            {
                "title": "Restart the transfer from the GCP console.",
                "correct": false
            },
            {
                "title": "Use parallel composite uploads to speed up the transfer.",
                "correct": true
            },
            {
                "title": "Upload the file Multi-Regional instead and move the file to Nearline Storage Class.",
                "correct": false
            }
        ]
    },
    {
        "title": "You've created a Kubernetes engine cluster named 'my-gcp-ace-proj-1', which has a cluster pool named my-gcp-aceprimary-node-pool. You want to increase the number of nodes within your cluster pool from 10 to 20 to meet capacity demands. What is the command to change the number of nodes in your pool?",
        "imagePath": "",
        "optionType": "singleChoice",
        "notes": "some notes on this question",
        "supportiveInfo": "With cloud storage, Object composition can be used for uploading an object in parallel: you can divide your data into multiple chunks, upload each chunk to a distinct object in parallel, compose your final object, and delete any temporary source objects. This option helps maximize your bandwidth usage and ensures the file is uploaded as fast as possible.",
        "options": [
            {
                "title": "gcloud container clusters resize my-gcp-ace-proj-1 --node-pool my-gcp-ace-primary-node-pool --num-nodes 20",
                "correct": true
            },
            {
                "title": "kubectl container clusters update my-gcp-ace-proj-1 --node-pool my-gcp-ace-primary-node-pool --num-nodes 20",
                "correct": false
            },
            {
                "title": "gcloud container clusters resize my-gcp-ace-proj-1 --node-pool my-gcp-ace-primary-node-pool --new-size 20",
                "correct": false
            },
            {
                "title": "gcloud container clusters update my-gcp-ace-proj-1 --node-pool my-gcp-ace-primary-node-pool --num-nodes 20",
                "correct": false
            }
        ]
    }
]